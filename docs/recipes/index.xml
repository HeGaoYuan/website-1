<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recipes on</title><link>https://kubedl.io/docs/recipes/</link><description>Recent content in Recipes on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 16 Mar 2021 08:43:03 +0100</lastBuildDate><atom:link href="https://kubedl.io/docs/recipes/index.xml" rel="self" type="application/rss+xml"/><item><title>File Sync</title><link>https://kubedl.io/docs/recipes/code-sync/</link><pubDate>Mon, 29 Mar 2021 23:04:09 -0700</pubDate><guid>https://kubedl.io/docs/recipes/code-sync/</guid><description>KubeDL supports syncing files from remote on container launch. User can modify the code, reference the code repository and run the jobs without re-building the image every time to include the modified code.
Currently, only support downloading from github. The implementation is pluggable and can easily support other distributed filesystem like HDFS.
Git Hub Users can set the git config in the job&amp;rsquo;s annotation with key kubedl.io/git-sync-config as below. The git repo will be downloaded and saved in the container&amp;rsquo;s working dir by default.</description></item><item><title>Host Network</title><link>https://kubedl.io/docs/recipes/hostnetwork/</link><pubDate>Fri, 02 Apr 2021 19:32:11 -0700</pubDate><guid>https://kubedl.io/docs/recipes/hostnetwork/</guid><description>Background Network bandwidth is a bottleneck resource for communication-intensive jobs. Host mode networking can be useful to optimize performance. In addition, other scenarios (e.g: nvlink communications between containerized gpu processes) may depend on host-network as well.
How To Use KubeDL provides a feature-gate to enable hostnetwork mode for jobs. Users only need to add an annotation kubedl.io/network-mode: host to the job specifications, for example:
apiVersion: &amp;quot;training.kubedl.io/v1alpha1&amp;quot; kind: &amp;quot;TFJob&amp;quot; metadata: name: &amp;quot;mnist&amp;quot; namespace: kubedl annotations: + kubedl.</description></item><item><title>Tensorboard</title><link>https://kubedl.io/docs/recipes/tensorboard/</link><pubDate>Wed, 07 Apr 2021 15:35:16 -0700</pubDate><guid>https://kubedl.io/docs/recipes/tensorboard/</guid><description>KubeDL can attach a tensorboard to a running tensorflow job. Users can visualize the tensorflow job with the tensorboard.
To use tensorboard, users must ensure that the tensorflow job logs are created and stored in a kubernetes remote volume (emptyDir, hostPath and local volume are not supported) and the tensorboard pod can mount the volume.
Users can set the tensorboard config in the job&amp;rsquo;s annotation with key kubedl.io/tensorboard-config as below. After that, users can access the tensorboard through this URL http://&amp;lt;ingress host&amp;gt;/&amp;lt;ingress pathPrefix&amp;gt;/&amp;lt;job namespace&amp;gt;/&amp;lt;job name&amp;gt;.</description></item><item><title>Metadata Persistency</title><link>https://kubedl.io/docs/recipes/metadata-persistentcy/</link><pubDate>Thu, 08 Apr 2021 14:47:51 -0700</pubDate><guid>https://kubedl.io/docs/recipes/metadata-persistentcy/</guid><description>Background As AI platform builders, it is quite inefficient to directly query metadata(jobs/pods) from ApiServer for following reasons:
intensive queries may cause ApiServer jitters and does negative impact on cluster reliability. metadata will be permanently lost once job was deleted from etcd. etcd will possibly be the bottleneck of whole system. To address this, KubeDL provides pluggable facilities for developers/users to persist their metadata to customized external storage system, such as mysql, postgresql, redis&amp;hellip; and mysql storage plugin has now available.</description></item><item><title>Events Persistency</title><link>https://kubedl.io/docs/recipes/events-persistentcy/</link><pubDate>Thu, 08 Apr 2021 14:48:07 -0700</pubDate><guid>https://kubedl.io/docs/recipes/events-persistentcy/</guid><description>Background Similar to metadata persistency, platform builders may also wants to persist job-related events to external system(usually time-series databases), since events can only be preserved for 3 hours by default in kubernetes, and events sinks helps a lot in debugging and tracing. KubeDL also provides pluggable facilities to persist events to customized external storage system, such as aliyun-sls, graphite&amp;hellip;and aliyun-sls plugin has now available.
How To Use Same as metadata persistency, users should set-up their storage system certificates first.</description></item></channel></rss>